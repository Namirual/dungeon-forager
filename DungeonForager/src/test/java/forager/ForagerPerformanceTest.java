/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forager;

import forager.creator.DungeonCreator;
import forager.domain.*;
import org.junit.Before;
import org.junit.Test;

/**
 *
 * @author lmantyla
 */
public class ForagerPerformanceTest {

    Dungeon dungeon;

    final int SEED = 4321;

    String[] size20 = new String[]{
        "##E###.#.....#E.....",
        "##..##.#.###.#.##.#.",
        "..S.................",
        "..##.##...#.##.##.#.",
        "..#.#..#EE##E...#..#",
        "..#......#..E#.#...E",
        "#.#.....#.#.#.###...",
        "##..##....###.###...",
        "...###E.......E##...",
        ".#...###...#.##.#.#.",
        "..#..###.##.##.#....",
        ".#...#.#E#...#.....E",
        "...#...E#.##..E...##",
        "#...##..#EE#####....",
        "...##E#...##..#.#...",
        ".#..#...##.....#...#",
        "##.....#.#..#..#..#.",
        "..##.#..##.#..#..G.E",
        "#..#.....#........#.",
        "##.....###...#.##..."};

    String[] size30 = new String[]{
        ".#E#....#..#..E........#..E..#",
        "......###...##..##.#..##...#.#",
        "..S.........................##",
        "##..##.#...#...#.##..#..###.#.",
        ".#......E.E.#.##.#..E...#.#.##",
        "...###....E.##......###..#..##",
        ".#.........#.#.###....#.......",
        ".#.#.#..#.#E#E...##E.#...##..E",
        "##.#.....#.#...#...#E..#..#.##",
        "...#..####.E.#.##....##..##.#.",
        ".##..###.#####E##..#.#.#.#..##",
        ".##.E#..###.E.###....#.##....#",
        "....#.#...#.#.#..#.###.E..#...",
        "##..#.#..###...######..##....E",
        "#...#..#.#.#..#.##....#.....#.",
        ".#.#..##.#.##.#.#......#....##",
        "#...#.....#...##.#.#.#....#...",
        "...#...#.#.####.###.#.#...#.#.",
        "....##.#..#..###..##....##....",
        ".#...#.....E.###.E#.###.#.#..E",
        "....#.#...#.#..#####......#.#.",
        ".##......##.##...#.#E.#.....##",
        "..###.#...##.##...#.#.#..#...#",
        ".#..#...#.#..##.##EE.#.E###.#.",
        "...#...##....###............##",
        "....#.#...#.##.E...##..#.....E",
        "..#.##...##........#.###.#...#",
        "#.###.##...#.............#.G#.",
        "##.#..#...###.##..#.#####.....",
        "#.#....#..#.#..##..#.#.#.#...."};

    String[] size40 = new String[]{
        "..E#...##.#...E..##.###.#.E####....####.",
        "#...#......##..#.#..#..#.#..#.##.##.....",
        "..S....................................#",
        "#..#.##...##.###......#....###.#.##....E",
        "..#.#...E..#E##.E..#E#.#.E.#..#EE..#....",
        "...###..###.#.###....#.......####E.#...#",
        "#.#..#..##E..#....##.#..#####..##......#",
        "..#...#..#.E.####..#E#.##.....E##.......",
        ".#.#.E.#....##.#.#####.#.##E##...E..#...",
        "##..#.#........E..#........#...E#####..E",
        "..###..#...#...E##E#..E.....#....##.....",
        "..#.....#.E#......E#.##..E##..###E.E...#",
        "......##..#..#...#.#.#..#.#...#####E..#.",
        ".#.#.#....#.##.######E........##..#.....",
        ".#####.###...#....#.#E.#...#...##.E.#...",
        "....#..#..#...#..####..#..##...#..##...E",
        ".#......E.#.E......#...#.#..#..#EE.##..#",
        "#.##.E#E##..#.E####..###.#.#....#..##.#.",
        ".....##...#...#.#....#####.........##...",
        "....####.#...#.#.##..#.##.#.....#.#.#...",
        ".#.#.####..#.....#...###..###.####.#..#.",
        ".#.#.##.#........#######..#.###........E",
        "#....#.E.#...##.......#.#..###....#...#.",
        "..#...#.#......#E###...#.....###..#.#...",
        "###.##......###..#...##E...###..#..##..#",
        "#..#E.EE.##..#.#..#.#..E##..###.####....",
        "###..#......#.#..###..#.#...#.##EE.#....",
        ".......#.#.##.#...#..#.#...#.###E.#.#..E",
        "#.#...###.#.##...#######..##E#.#E...#..#",
        ".#.####..##...###......#.###.#..#.....##",
        "...#.###...####.###...###..##....#....##",
        ".#..###E####..#.#.#.#...#..#....E......#",
        "...#.#....##...##.#...##.#..#.##....#.#.",
        ".##.#..#...#...#....E.#....##E..#......E",
        "##....#.##.##.#.#E.....E...#.##.#.E...#.",
        ".#......##..#.#.##E.##...#..E.##..#.#.#.",
        "#..#....###.#....#####..#.##.#..#...#..#",
        "..#....#.##.#....###....#.###........G#.",
        "#.##..#.#.#.#..#.##.#...#..#...##.#.#...",
        ".#.##.#..##...##.#...##.##.##..#.#.#...E"};

    String[] size50 = new String[]{
        "..E...#..#..##E.#....#...#E#...##....#E###.###....",
        "##..........#...#..#.##..#....##..##.#.#.......##.",
        "..S.............................................##",
        "..###......#.##...##.#..##...###.#.#..####.#.#..#.",
        ".#.##..EEE...#...E..E##...###.E.E.E##...##.#E...#.",
        ".##..#.#.#....#.#..##..##.##E..#.#EE...#..#.#.#..E",
        ".#.#.#..##..#E.E..#E......#............#..#.......",
        ".#.#.#E.#E..##.......E..#..##.#..E#.#.E...###.....",
        "#..#..##..###..###..####.....E.##.E.#...#..#.E....",
        "##.#.##.#.#....E.#...#E...E...#...#....#.#....#.#.",
        "#.#..##.....##...#E..#.##.........#.#......E.#..#.",
        ".##.#.##..#...#.#E.......#..#..#.E.###...#.......E",
        "....##...#....E###E#.....E...#...##...#..#........",
        "....####.....#.#..........##..#..#...#..###..E...#",
        ".....######.##..#...##E#..#.#...##.#..#.#...##....",
        "#.#.######....#...#..##.#.##...E.##E.#......###.#.",
        ".#.#.......#...#....#.#####...#E..####.#.#....#.#.",
        ".....#.#.##..##..#......#.....#.E#..#...#.#..#...E",
        "..##...##.#E...##..E#..#.##...#..##....##..#....#.",
        ".......E##.#.#....#...#....#..#.#.##..#.##...E...#",
        "##....###.##.##E#####...##..####.#E.....#.#.#.....",
        ".#.#..#...#.#....#.#......E...#.#......#....#.....",
        "...#......#..#E.........######..#.#.....E#..#....#",
        "#...##..#.#.#..##.E..###...#.#...#.##E..#.###.#..E",
        "....##.#.##...E.E.#.##.#..#.#...#.E##..#..#.......",
        "...#E#..#E#.E....###.E.#....#.E..#.#.###E#..#...##",
        "#.###.#..#..#.#.E........##...###.##.E#..#E#.##.##",
        "..###.#.#.###..###..#.#..##.....EE##..##.....##..#",
        ".#.##..#E#.E#..#.#.##......##.EE#.#..##...##.E#...",
        ".#..####..##..#....#.##...#.....#.#.#..#.#.#E....E",
        "#...#.#.#..E#...#.E.####..#..#..#..#.##.#..##.#.##",
        "#....##..#..#..#..###E#..EE..#....#..#...#..#E..#.",
        ".....##.#..#..#.#...##.#.E#....###...#..#...#.....",
        "#####...##.#.#E...#.#....#.##..#E##.......#.###...",
        "....#..#..##...E...#...#.......###.#.#.....#......",
        ".#.............###.#####..##E..##.##....###.##...E",
        "....#.###..##.##.......#.###.#.##E##.#EE##..#....#",
        "#.##.....##........#.#.......#..#......#.#.#....#.",
        ".#.##.##....##.#.#.#.#..#.E#.#.#...#.#.....#.##...",
        "..#.##EE...#...#......#...#.#.....###.#..##..E...#",
        "##.#..#.#..#.#.E.....#..#......##..##..EE##..##...",
        "#..#.....##.#..E...E#.#...#..#.#.#.#.E..#.E####..E",
        ".##.#...###..#..#..#.#.##....##..####.....#...#..#",
        "#..##.###.#.EE.....###E...###E..##.#E.#..#.E#...#.",
        ".#.#...#.##..#.#..##......##.....#.#..#......#..##",
        "#.#.####....#..#.#.##.#..##........###.#..#.......",
        ".#.##.###....#..###..####..#.#.##......#.###..#.#.",
        "#.....#..#.##..###..#.###..#..#.##.#.#........#G.E",
        "###.#..#..#..##.#.#.#...##....####..#.....#.###.#.",
        ".####.....#.##.#.#...#.....##..#####.....####...##"};

    String[] size60 = {
        "#.E.##.#.#....E#.....#.###E#####..###.E##..###....E..#......",
        "##..##.##....#....#.#..##..##....#..##...#.##..#.#.#........",
        "..S.........................................................",
        "##..#..#..#..#...#.#..##...###....####.#..........#..#......",
        ".#..#..#E....#...#..E#E.###..#..E.##..##.#..E..#.#.....#E...",
        "...##....#..#..##E.#.#.##...#..E.E......#....#.....#..###.#.",
        "#.#.######...####..#...#E#..#.E#..#.....................#.#.",
        "##....E#..#..#.#...E#...#.#E..##E.#.#....#..##.E..#..#..#..E",
        "#####.#......###.....####.##.EE.#....#.#.#E.#..##.......#.#.",
        "..#####.###..##.#E...#.##.....#....#.....#.#.###.##.#..##.##",
        ".#........##.E#..#.##...#E#.##E#.##.E#.#.##EE.##..E..##....#",
        "#..#....#.####.##E##.#.#...#.##......#..#####..E##...#.##.##",
        "....#...#....##.##E#.###..#..###....#.##....#..#.#.#..#E#...",
        "#.###...##..#..#..##..#....E...##..#.#.#.E....#.#...#####..E",
        "##...#..#....#..#..#.....##..#.##..E..#.###...E.#.#....#..##",
        "#.....#E.###.#.#.##.#.###..#..######.##..###..#......#..#...",
        "###..#...#.......#..#...#E#...#..#.##..E#....#..#.##....#.##",
        ".####.#..####.##.#.##.####.#...##....E.###....E...#..##....#",
        "......#.....#..###..E#..#.#.....#..###......#.#####.#......#",
        ".##..E##.#..E##.###....#E###....#.......#.#.#...#E..#..#...E",
        ".....#.#....#.##.#..#.......########.##..#.#.###....E.#...#.",
        ".##..#..#.....#.##...##.##...E....#.#.###..###.#.##.####...#",
        "##.....##..##.#E#.E#....##E.E...#.#.E#E#..#.#.##.#...#....#.",
        ".####E.##.##.E.##..#......##....#.##..##....E#..##..##......",
        "##..E#..####..#...#####..#######.#..#...##E.##..............",
        "...#.E....E##E##E.#.###.#..#.#.#.#..###...#..E....E..#.##..E",
        "....##.#..####....E###.#.######.#.E####....#..#..#...##.#.#.",
        ".#....#....#..#....##...##.##....###.E...#.....#.##.#.E##...",
        "..#.##..E.#E.#.#.#.EEE###..#..#...#..#.#...E#.#.........#...",
        "...#.E####..E...###.#..##...#..#E.##.#E..........E.#.#....#.",
        ".....E.#...E....##........E#..E.....#.#.#.....#.##...#E#....",
        "###.#..##.....##.#####...#E..####..#.#....##...#..#...#....E",
        ".##....##.#....##E#.#....##..###E..E#.#.####.#........#...#.",
        ".#....E.#...#..E...#####...#......#..E#..#..E..#..##...##.##",
        "#.....#..#....#...#..###...E#######.......###E...##...#E...#",
        "..#.##.E.........#......#.#.E..#..####.....E###...#.#.###.#.",
        ".#.#...##.###....#..#.#.#.##..#...#.#E..##.#...###.###.#....",
        "..#....#......##..#.#..#..##.#...#..####...E#...#.#.##.....E",
        "#.##E#.#.#E.##.#...#......#.#.#E........##.....##.#.#.#.....",
        "..##.#.#...#...##....E##.#..#..E.....#...#.....#...#.#..#.#.",
        "...##......#.......#...E.#.##..##.....E###...........###....",
        "....#...##.#..#E......#.......##.##.##..#........#.#.#.....#",
        "#...##E#.###.#...#.#.#.#.#...########.#.###.#####E.#...#....",
        "#.......#.#.....#.###.#.E.......#....#..#...##.#..#..#.....E",
        "#.#...###..E#EE#..#........#...E..####..###.#...#.#.#.##....",
        "...........#.##.E.#..##E..#.E...#.E#.E.#...#...#.....#.##...",
        "...#.####....###...#......#.#.#E.###...E...E..........#.#.#.",
        ".#.###.#..E.....##..##....####...#...##....#..#.#..#..#.#...",
        "#.#.....#.#...E##..#.##..#.#.#.E#.##..#.#..#...#.#....##..#.",
        "....#.##.###..#..###.#.#.E#..#.#####.###..E...##.#.#E.###..E",
        "###.#...#..#E...#...#.#.#####.##E####...###.#####.#..####..#",
        "#.##..#...#.#.#.E#E.#.#.#.#.##...##.#.##..#.##..#E..##..#.##",
        "...###.#....#..#....###.....#..#..#.......#.#.##E###E.#...#.",
        "#..#.....#...E......#....#...#.##..E..#EE.##.#E.......E.#..#",
        "#....#.###.#.###.E#..#..#.....#......##.#.########.#.#.#....",
        "#.##.###.....#..##..#.....#.E#.#.##...#.#.#..#..#.....#....E",
        "...###.#.##..#.#####.#.##..#....##.#.###.#####...#...#......",
        ".##...##.#.#.#.#.###.#..#.#...#.#..##....#..##..#.#...#..G..",
        "....#.##..##.#.##.#......###....#.....#....#......#.###....#",
        "..#.....#..#..#......#...#........#....##.#.#.#...#.....#.#."};

    String[] size70 = {
        "##E..#.##..###E..#.....##.E.##..##.##.E...#.##.#.#E#.##.#...##E......#",
        ".#.##.#..##.....#.##..###..###.#.#####.#...#.......#..##..#.#....##.#.",
        "..S.................................................................#.",
        "...##.....#.######.....###.#..#...#..#...#...#.#...#.###.##.#.#.##...E",
        "#.##.##.E.#...E#....E###..##.#..E#.####.E##.E......####.E.##E#..#....#",
        "#...###....##.#..##E####.#....#.#.#.##E#...#.#.......#.....#...####.##",
        "..##...#.#.E##.......#.##...###.......#..##....###.##..#.#..#...#.#...",
        ".#####.##..........##.EE#.E...####....##.E.#...#.#.#.E.##.#..#.#..#...",
        "......#.#........##..##.#...###.##......##E..##.#..##.#..#..#.#..##.#.",
        "##...##.#....E#...E##...#..#E...##.#......#.###..##.E.....#.##..##...E",
        "..##.#.###.####.#.....#..###..#.#..#####..###..#..#.##E##....#.##E....",
        "....#...#..##...###.#.###E.##.#.##E.##.#.#..#.#....##..#.#.#..#.E.....",
        "..#..E#....##..#............##.###...#..#..#.###..##..E#.###....#.#...",
        ".#.#.#....#.....#......##..#..#...EE##..###.#.....#...E..###..#E......",
        ".#.##..##..######.#.##.##.##...E..#.###...#...#.##.##.#.#.####....#..#",
        "#..#####........E##...E#....#...#..###.#.#..E.#.##....#.......###E#..E",
        ".....#.#.#..#..####.###.E.#...##.E.###E#.E#..#.##.#...#..E.......#....",
        "....#......#..........E.##..##....########.#..E##...#......#..E.##...#",
        "#..#..#.#.E..#..#.E.E..#.#.##.##E#.#..#.......#..E#..#.#.##.E.....#.#.",
        "...####.....##...EE###..#.E..E#..##..#..##E#..#.#...E####....#........",
        ".#...#.E#..#..#E##......##..#......#..#.#.###.#..#..#........#.#......",
        "#####..#.#####.#.....E..##..#.#...#...#....##....#...#.........#.#...E",
        "#..##....#..##.####.....#....##.....#..##..#...####.#.#...#.#.#..#..##",
        "######...#E###..#.E...#.#..##..###.#....#E...##.#...#.##.#.#......#...",
        ".....#..E....##..##...#.....#....##.......#...#...##.#.#.##.#.#...#...",
        "...#..#.####E.#..#....#.......####.....#E..E.....#....#.E#.#.#####....",
        ".....##E###.##..#...#........#.#...###.#EEE..#...#.#..###.....E#.##.#.",
        "..##.E.###.#.#.#.##.#....##......E.#.##..#..##....####.##E..E.#......E",
        ".###E##E##EE..##.#..##..#.#......#....E.##..##.......#.#..#.E..#.#..##",
        ".###.....###.E.#.###..#.#....#E.##.....##....##..#.#.#...E.#EE#.#....#",
        ".....###..E.#..#.#.#...#.#....####...#.#..#.......#..#..#.##..E##.....",
        "#.##.####.E.......#..##.#####...#..E#.#E.....#.##.####..##.#...E#....#",
        "##.#....#..##...##..#..#...#....#.#.E.####.#.#.#..#....#..#..#E.###...",
        "###..E......##.##.#......##...#.#.##.##..##.#...#.........###.#.#.#..E",
        "#..####..E....#...##.#E......#.#.#..........####.......#...##.#..#...#",
        "....E..E#.#..#E#E#......#.#.#...E....#E.######....#.##..##..#.####..#.",
        "#.......#.#.........E#E..#..##..#.#.##..##.##E#.#.#..E.#E....#.#....#.",
        ".#.#....#####.##E.E.......#..##..E#.#.#......#...##.#.#.#E..#.....#..#",
        "#...#...#E#.#####.E.##..E.#####...#.#...#...#.E#.#E.#.#.#..#.#......##",
        ".#...##E#E...##.#.....#.#.#..####...###....#..#..##..##......#.#.....E",
        ".##.E.###..#E.###....#...###.###..E##.#..#...#.#E##.#.....##.....#..##",
        "#..##..##..###.#..###..#.....##..#...#..#.##...#.#...#..#.........#.#.",
        "....##.........##...##....##.##.##...##E...##..#...#.......#....##....",
        ".#.##.....#..#.#.####...#.E#.####...#.#...E##..#..#.......#..##..#....",
        "###.#.#..#..##..E...#....###E......#....#....##...E..#..#..E#.E#......",
        "..###.#.##.E..##..E#.#.####....#.#.###E.####.##..###.#......#E....#..E",
        "#..#...###E.##.....#E.###.#.#.###..E.......#E.#.E..#.###...#.##.#.#...",
        ".#####.#..###...#.#....#####.##E#....#..#.##......#..##E#..###........",
        ".##..##.#.###..#.##.#...#.#...#...###.#...#.E#.###..#..##...#######...",
        "..#......#.##...##.E##...###.##...####..#..#...#.##..##....E.E##..#...",
        "#.##.#.#..####.#...E..#.....##....#.#..#.##...##.E.EE...E...#....#..#.",
        ".#..E..#E#E..E##...#..##..##E.#.#.###........#...E#..#E...E...#..#...E",
        ".#.#.###........#.#..#.....#####E#....#..##.E.#.#...###...##..#...#...",
        ".##.#..#.#.#..#...##.E###.#.#...#..#.#.##.#.##....#....##.###.#.#....#",
        ".###.##....##.####...##.#.#.......##..E.##.#..#.#..##..#.###.#.......#",
        "#....E.....#E..#.#.#..##..##E........#####..###E##E#.#.....#.##.......",
        ".#.#.##..E.........#.#.#....#E#.#..#..#.E#..E...#.#.....#...E.####...#",
        "...##.###E##E#..###....#..#.#......#####.###...#...##.##.#.##.E#..#..E",
        ".#.##....##.#..#...#E####.#....##...#..E.#.#.....#...#...E##.#.####...",
        "..###.E..##..#.#..E#.....###...###.#...E.......####.##.#E#.....#.##.#.",
        "#.#.....#.#.#..#.#...####EE.E###.....#...#..#...#.###.##...###.##....#",
        "#..#.#.E#.#..#...#.#..#...###.E...E.##.#.#..#E###.###.......E.........",
        "#..##..#######....#.###..#####...##.#E#.#.#.E.E###.###...##.###.#.#...",
        "#.###......####E#.......#..##E#.#....##............###.#.E#......#...E",
        "##.....###...#..E.......###...#.#..#.....###....E...##.#.....#.#..#.#.",
        "##....###.#E....#.E#.#.....#.#E..#..####.##....##.#.E####.#..##.....#.",
        ".#.#..##...#...#..##..##...#.#.#..##.....##.....#......#.#..#.#.....##",
        ".........##....#..##.#....#..###.###....#.####.#..#.##.#....###...#G..",
        "...........#...####..#....#....#..#..#........#.#..............##.#.#.",
        "#....####...##....#.##.....##.#.#...##....##.#.#..#.#..#...#...#.##..E"};

    @Before
    public void setUp() {
    }

    @Test(timeout = 5000)
    public void test20x20WithForager() {
        testDungeonWithForager(size20, "20 x 20");
    }

    @Test(timeout = 5000)
    public void test20x20WithPhasedNoreuse() {
        testDungeonWithPhasedForagerNoReuse(size20, "20 x 20");
    }

    @Test(timeout = 5000)
    public void test20x20WithPhasedForager() {
        testDungeonWithPhasedForagerManhattan(size20, "20 x 20");
    }

    @Test(timeout = 5000)
    public void test30x30WithForager() {
        testDungeonWithForager(size30, "30 x 30");
    }

    @Test(timeout = 2000)
    public void test30x30WithPhasedNoreuse() {
        testDungeonWithPhasedForagerNoReuse(size30, "30 x 30");
    }

    @Test(timeout = 5000)
    public void test30x30WithPhasedForager() {
        testDungeonWithPhasedForagerManhattan(size30, "30 x 30");
    }

    //Test disabled - Forager fails to deal with 40x40 dungeons
    //@Test(timeout = 10000)
    public void test40x40WithForager() {
        testDungeonWithForager(size40, "40 x 40");
    }

    @Test(timeout = 5000)
    public void test40x40WithPhasedForager() {
        testDungeonWithPhasedForagerManhattan(size40, "40 x 40");
    }

    @Test(timeout = 5000)
    public void test40x40WithPhasedNoreuse() {
        testDungeonWithPhasedForagerNoReuse(size40, "40 x 40");
    }

    @Test(timeout = 5000)
    public void test50x50WithPhasedForager() {
        testDungeonWithPhasedForagerManhattan(size50, "50 x 50");
    }

    @Test(timeout = 10000)
    public void test50x50WithPhasedNoreuse() {
        testDungeonWithPhasedForagerNoReuse(size50, "50 x 50");
    }

    @Test(timeout = 8000)
    public void test60x60WithPhasedForager() {
        testDungeonWithPhasedForagerManhattan(size60, "60 x 60");
    }

    //Test times out
    //@Test(timeout = 8000)
    public void test60x60WithPhasedNoReuse() {
        testDungeonWithPhasedForagerNoReuse(size60, "60 x 60");
    }

    @Test(timeout = 2000)
    public void testEasy20x20WithForager() {
        DungeonCreator creator = new DungeonCreator(20, 20, 5);
        char[][] map = creator.createDungeon(true, SEED);

        testDungeonWithForager(turnCharMapToStringMap(map), "easy 20x20");
    }

    @Test(timeout = 2000)
    public void testEasy30x30WithForager() {
        DungeonCreator creator = new DungeonCreator(30, 30, 5);
        char[][] map = creator.createDungeon(true, SEED);

        testDungeonWithForager(turnCharMapToStringMap(map), "easy 30x30");
    }

    @Test(timeout = 2000)
    public void testEasy40x40WithForager() {
        DungeonCreator creator = new DungeonCreator(40, 40, 5);
        char[][] map = creator.createDungeon(true, SEED);

        testDungeonWithForager(turnCharMapToStringMap(map), "easy 40x40");
    }

    //Test times out
    //@Test(timeout = 2000)
    public void testEasy50x50WithForager() {
        DungeonCreator creator = new DungeonCreator(50, 50, 5);
        char[][] map = creator.createDungeon(true, SEED);

        testDungeonWithForager(turnCharMapToStringMap(map), "easy 50x50");
    }

    @Test(timeout = 5000)
    public void testSmallEasyDungeonsWithPhasedForager() {
        for (int size = 20; size <= 50; size += 10) {
            DungeonCreator creator = new DungeonCreator(size, size, 5);
            char[][] map = creator.createDungeon(true, SEED);
            testDungeonWithPhasedForagerManhattan(turnCharMapToStringMap(map), "easy " + size + "x" + size);
        }
    }
        
    @Test(timeout = 8000)
    public void testEasy75x75DungeonsWithPhasedForager() {
        int size = 75;
        DungeonCreator creator = new DungeonCreator(size, size, 5);
        char[][] map = creator.createDungeon(true, SEED);
        testDungeonWithPhasedForagerManhattan(turnCharMapToStringMap(map), "easy " + size + "x" + size);
    }

    @Test(timeout = 8000)
    public void testEasy100x100DungeonsWithPhasedForager() {
        int size = 100;
        DungeonCreator creator = new DungeonCreator(size, size, 5);
        char[][] map = creator.createDungeon(true, SEED);
        testDungeonWithPhasedForagerManhattan(turnCharMapToStringMap(map), "easy " + size + "x" + size);
    }

    @Test(timeout = 8000)
    public void testEasy150x150DungeonsWithPhasedForager() {
        int size = 150;
        DungeonCreator creator = new DungeonCreator(size, size, 5);
        char[][] map = creator.createDungeon(true, SEED);
        testDungeonWithPhasedForagerManhattan(turnCharMapToStringMap(map), "easy " + size + "x" + size);
    }

    @Test(timeout = 8000)
    public void testEasy200x200DungeonsWithPhasedForager() {
        int size = 200;
        DungeonCreator creator = new DungeonCreator(size, size, 5);
        char[][] map = creator.createDungeon(true, SEED);
        testDungeonWithPhasedForagerManhattan(turnCharMapToStringMap(map), "easy " + size + "x" + size);
    }
    
    @Test(timeout = 10000)
    public void testEasy250x250DungeonsWithPhasedForager() {
        int size = 250;
        DungeonCreator creator = new DungeonCreator(size, size, 5);
        char[][] map = creator.createDungeon(true, SEED);
        testDungeonWithPhasedForagerManhattan(turnCharMapToStringMap(map), "easy " + size + "x" + size);
    }

    // Test times out
    // @Test(timeout = 8000)
    public void testEasy300x300DungeonsWithPhasedForager() {
        int size = 300;
        DungeonCreator creator = new DungeonCreator(size, size, 5);
        char[][] map = creator.createDungeon(true, SEED);
        testDungeonWithPhasedForagerManhattan(turnCharMapToStringMap(map), "easy " + size + "x" + size);
    }

    public void testDungeonWithForager(String[] map, String name) {
        dungeon = new Dungeon(map);
        Forager forager = new Forager(dungeon);

        long aikaAlussa = System.currentTimeMillis();

        forager.searchPath(dungeon.findTileWithChar('S'),
                dungeon.findTileWithChar('G'), 5, Heuristic.Manhattan);

        long aikaLopussa = System.currentTimeMillis();
        System.out.println(name + " Foragerilla (Manhattan): " + (aikaLopussa - aikaAlussa) + "ms.");
    }

    public void testDungeonWithPhasedForagerNoReuse(String[] map, String name) {
        dungeon = new Dungeon(map);
        PhasedForager forager = new PhasedForager(dungeon, false);

        long aikaAlussa = System.currentTimeMillis();

        forager.searchPath(dungeon.findTileWithChar('S'),
                dungeon.findTileWithChar('G'), 5, Heuristic.Manhattan);

        long aikaLopussa = System.currentTimeMillis();
        System.out.println(name + " PhasedForagerilla (No reuse): " + (aikaLopussa - aikaAlussa) + "ms.");
    }

    public void testDungeonWithPhasedForagerManhattan(String[] map, String name) {
        dungeon = new Dungeon(map);
        PhasedForager forager = new PhasedForager(dungeon);

        long aikaAlussa = System.currentTimeMillis();

        forager.searchPath(dungeon.findTileWithChar('S'),
                dungeon.findTileWithChar('G'), 5, Heuristic.Manhattan);

        long aikaLopussa = System.currentTimeMillis();
        System.out.println(name + " PhasedForagerilla (Manhattan): " + (aikaLopussa - aikaAlussa) + "ms.");
    }

    public String[] turnCharMapToStringMap(char[][] map) {
        String[] stringMap = new String[map.length];
        for (int val = 0; val < map.length; val++) {
            stringMap[val] = String.copyValueOf(map[val]);
        }
        return stringMap;
    }
}
